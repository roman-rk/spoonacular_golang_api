/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ImageAnalysisByURL200Response 
type ImageAnalysisByURL200Response struct {
	Nutrition ImageAnalysisByURL200ResponseNutrition `json:"nutrition"`
	Category ImageAnalysisByURL200ResponseCategory `json:"category"`
	Recipes []ImageAnalysisByURL200ResponseRecipesInner `json:"recipes"`
}

// NewImageAnalysisByURL200Response instantiates a new ImageAnalysisByURL200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageAnalysisByURL200Response(nutrition ImageAnalysisByURL200ResponseNutrition, category ImageAnalysisByURL200ResponseCategory, recipes []ImageAnalysisByURL200ResponseRecipesInner) *ImageAnalysisByURL200Response {
	this := ImageAnalysisByURL200Response{}
	this.Nutrition = nutrition
	this.Category = category
	this.Recipes = recipes
	return &this
}

// NewImageAnalysisByURL200ResponseWithDefaults instantiates a new ImageAnalysisByURL200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageAnalysisByURL200ResponseWithDefaults() *ImageAnalysisByURL200Response {
	this := ImageAnalysisByURL200Response{}
	return &this
}

// GetNutrition returns the Nutrition field value
func (o *ImageAnalysisByURL200Response) GetNutrition() ImageAnalysisByURL200ResponseNutrition {
	if o == nil {
		var ret ImageAnalysisByURL200ResponseNutrition
		return ret
	}

	return o.Nutrition
}

// GetNutritionOk returns a tuple with the Nutrition field value
// and a boolean to check if the value has been set.
func (o *ImageAnalysisByURL200Response) GetNutritionOk() (*ImageAnalysisByURL200ResponseNutrition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nutrition, true
}

// SetNutrition sets field value
func (o *ImageAnalysisByURL200Response) SetNutrition(v ImageAnalysisByURL200ResponseNutrition) {
	o.Nutrition = v
}

// GetCategory returns the Category field value
func (o *ImageAnalysisByURL200Response) GetCategory() ImageAnalysisByURL200ResponseCategory {
	if o == nil {
		var ret ImageAnalysisByURL200ResponseCategory
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *ImageAnalysisByURL200Response) GetCategoryOk() (*ImageAnalysisByURL200ResponseCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *ImageAnalysisByURL200Response) SetCategory(v ImageAnalysisByURL200ResponseCategory) {
	o.Category = v
}

// GetRecipes returns the Recipes field value
func (o *ImageAnalysisByURL200Response) GetRecipes() []ImageAnalysisByURL200ResponseRecipesInner {
	if o == nil {
		var ret []ImageAnalysisByURL200ResponseRecipesInner
		return ret
	}

	return o.Recipes
}

// GetRecipesOk returns a tuple with the Recipes field value
// and a boolean to check if the value has been set.
func (o *ImageAnalysisByURL200Response) GetRecipesOk() ([]ImageAnalysisByURL200ResponseRecipesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recipes, true
}

// SetRecipes sets field value
func (o *ImageAnalysisByURL200Response) SetRecipes(v []ImageAnalysisByURL200ResponseRecipesInner) {
	o.Recipes = v
}

func (o ImageAnalysisByURL200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["nutrition"] = o.Nutrition
	}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["recipes"] = o.Recipes
	}
	return json.Marshal(toSerialize)
}

type NullableImageAnalysisByURL200Response struct {
	value *ImageAnalysisByURL200Response
	isSet bool
}

func (v NullableImageAnalysisByURL200Response) Get() *ImageAnalysisByURL200Response {
	return v.value
}

func (v *NullableImageAnalysisByURL200Response) Set(val *ImageAnalysisByURL200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableImageAnalysisByURL200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableImageAnalysisByURL200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageAnalysisByURL200Response(val *ImageAnalysisByURL200Response) *NullableImageAnalysisByURL200Response {
	return &NullableImageAnalysisByURL200Response{value: val, isSet: true}
}

func (v NullableImageAnalysisByURL200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageAnalysisByURL200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


