/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetMenuItemInformation200Response 
type GetMenuItemInformation200Response struct {
	Id int32 `json:"id"`
	Title string `json:"title"`
	RestaurantChain string `json:"restaurantChain"`
	Nutrition SearchGroceryProductsByUPC200ResponseNutrition `json:"nutrition"`
	Badges []string `json:"badges"`
	Breadcrumbs []string `json:"breadcrumbs"`
	GeneratedText *string `json:"generatedText,omitempty"`
	ImageType string `json:"imageType"`
	Likes float32 `json:"likes"`
	Servings SearchGroceryProductsByUPC200ResponseServings `json:"servings"`
	Price *float32 `json:"price,omitempty"`
	SpoonacularScore *float32 `json:"spoonacularScore,omitempty"`
}

// NewGetMenuItemInformation200Response instantiates a new GetMenuItemInformation200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMenuItemInformation200Response(id int32, title string, restaurantChain string, nutrition SearchGroceryProductsByUPC200ResponseNutrition, badges []string, breadcrumbs []string, imageType string, likes float32, servings SearchGroceryProductsByUPC200ResponseServings) *GetMenuItemInformation200Response {
	this := GetMenuItemInformation200Response{}
	this.Id = id
	this.Title = title
	this.RestaurantChain = restaurantChain
	this.Nutrition = nutrition
	this.Badges = badges
	this.Breadcrumbs = breadcrumbs
	this.ImageType = imageType
	this.Likes = likes
	this.Servings = servings
	return &this
}

// NewGetMenuItemInformation200ResponseWithDefaults instantiates a new GetMenuItemInformation200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMenuItemInformation200ResponseWithDefaults() *GetMenuItemInformation200Response {
	this := GetMenuItemInformation200Response{}
	return &this
}

// GetId returns the Id field value
func (o *GetMenuItemInformation200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetMenuItemInformation200Response) SetId(v int32) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *GetMenuItemInformation200Response) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *GetMenuItemInformation200Response) SetTitle(v string) {
	o.Title = v
}

// GetRestaurantChain returns the RestaurantChain field value
func (o *GetMenuItemInformation200Response) GetRestaurantChain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestaurantChain
}

// GetRestaurantChainOk returns a tuple with the RestaurantChain field value
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetRestaurantChainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestaurantChain, true
}

// SetRestaurantChain sets field value
func (o *GetMenuItemInformation200Response) SetRestaurantChain(v string) {
	o.RestaurantChain = v
}

// GetNutrition returns the Nutrition field value
func (o *GetMenuItemInformation200Response) GetNutrition() SearchGroceryProductsByUPC200ResponseNutrition {
	if o == nil {
		var ret SearchGroceryProductsByUPC200ResponseNutrition
		return ret
	}

	return o.Nutrition
}

// GetNutritionOk returns a tuple with the Nutrition field value
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetNutritionOk() (*SearchGroceryProductsByUPC200ResponseNutrition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nutrition, true
}

// SetNutrition sets field value
func (o *GetMenuItemInformation200Response) SetNutrition(v SearchGroceryProductsByUPC200ResponseNutrition) {
	o.Nutrition = v
}

// GetBadges returns the Badges field value
func (o *GetMenuItemInformation200Response) GetBadges() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Badges
}

// GetBadgesOk returns a tuple with the Badges field value
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetBadgesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Badges, true
}

// SetBadges sets field value
func (o *GetMenuItemInformation200Response) SetBadges(v []string) {
	o.Badges = v
}

// GetBreadcrumbs returns the Breadcrumbs field value
func (o *GetMenuItemInformation200Response) GetBreadcrumbs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Breadcrumbs
}

// GetBreadcrumbsOk returns a tuple with the Breadcrumbs field value
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetBreadcrumbsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Breadcrumbs, true
}

// SetBreadcrumbs sets field value
func (o *GetMenuItemInformation200Response) SetBreadcrumbs(v []string) {
	o.Breadcrumbs = v
}

// GetGeneratedText returns the GeneratedText field value if set, zero value otherwise.
func (o *GetMenuItemInformation200Response) GetGeneratedText() string {
	if o == nil || o.GeneratedText == nil {
		var ret string
		return ret
	}
	return *o.GeneratedText
}

// GetGeneratedTextOk returns a tuple with the GeneratedText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetGeneratedTextOk() (*string, bool) {
	if o == nil || o.GeneratedText == nil {
		return nil, false
	}
	return o.GeneratedText, true
}

// HasGeneratedText returns a boolean if a field has been set.
func (o *GetMenuItemInformation200Response) HasGeneratedText() bool {
	if o != nil && o.GeneratedText != nil {
		return true
	}

	return false
}

// SetGeneratedText gets a reference to the given string and assigns it to the GeneratedText field.
func (o *GetMenuItemInformation200Response) SetGeneratedText(v string) {
	o.GeneratedText = &v
}

// GetImageType returns the ImageType field value
func (o *GetMenuItemInformation200Response) GetImageType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageType
}

// GetImageTypeOk returns a tuple with the ImageType field value
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetImageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageType, true
}

// SetImageType sets field value
func (o *GetMenuItemInformation200Response) SetImageType(v string) {
	o.ImageType = v
}

// GetLikes returns the Likes field value
func (o *GetMenuItemInformation200Response) GetLikes() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Likes
}

// GetLikesOk returns a tuple with the Likes field value
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetLikesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Likes, true
}

// SetLikes sets field value
func (o *GetMenuItemInformation200Response) SetLikes(v float32) {
	o.Likes = v
}

// GetServings returns the Servings field value
func (o *GetMenuItemInformation200Response) GetServings() SearchGroceryProductsByUPC200ResponseServings {
	if o == nil {
		var ret SearchGroceryProductsByUPC200ResponseServings
		return ret
	}

	return o.Servings
}

// GetServingsOk returns a tuple with the Servings field value
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetServingsOk() (*SearchGroceryProductsByUPC200ResponseServings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Servings, true
}

// SetServings sets field value
func (o *GetMenuItemInformation200Response) SetServings(v SearchGroceryProductsByUPC200ResponseServings) {
	o.Servings = v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GetMenuItemInformation200Response) GetPrice() float32 {
	if o == nil || o.Price == nil {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetPriceOk() (*float32, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GetMenuItemInformation200Response) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *GetMenuItemInformation200Response) SetPrice(v float32) {
	o.Price = &v
}

// GetSpoonacularScore returns the SpoonacularScore field value if set, zero value otherwise.
func (o *GetMenuItemInformation200Response) GetSpoonacularScore() float32 {
	if o == nil || o.SpoonacularScore == nil {
		var ret float32
		return ret
	}
	return *o.SpoonacularScore
}

// GetSpoonacularScoreOk returns a tuple with the SpoonacularScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMenuItemInformation200Response) GetSpoonacularScoreOk() (*float32, bool) {
	if o == nil || o.SpoonacularScore == nil {
		return nil, false
	}
	return o.SpoonacularScore, true
}

// HasSpoonacularScore returns a boolean if a field has been set.
func (o *GetMenuItemInformation200Response) HasSpoonacularScore() bool {
	if o != nil && o.SpoonacularScore != nil {
		return true
	}

	return false
}

// SetSpoonacularScore gets a reference to the given float32 and assigns it to the SpoonacularScore field.
func (o *GetMenuItemInformation200Response) SetSpoonacularScore(v float32) {
	o.SpoonacularScore = &v
}

func (o GetMenuItemInformation200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["restaurantChain"] = o.RestaurantChain
	}
	if true {
		toSerialize["nutrition"] = o.Nutrition
	}
	if true {
		toSerialize["badges"] = o.Badges
	}
	if true {
		toSerialize["breadcrumbs"] = o.Breadcrumbs
	}
	if o.GeneratedText != nil {
		toSerialize["generatedText"] = o.GeneratedText
	}
	if true {
		toSerialize["imageType"] = o.ImageType
	}
	if true {
		toSerialize["likes"] = o.Likes
	}
	if true {
		toSerialize["servings"] = o.Servings
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.SpoonacularScore != nil {
		toSerialize["spoonacularScore"] = o.SpoonacularScore
	}
	return json.Marshal(toSerialize)
}

type NullableGetMenuItemInformation200Response struct {
	value *GetMenuItemInformation200Response
	isSet bool
}

func (v NullableGetMenuItemInformation200Response) Get() *GetMenuItemInformation200Response {
	return v.value
}

func (v *NullableGetMenuItemInformation200Response) Set(val *GetMenuItemInformation200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMenuItemInformation200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMenuItemInformation200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMenuItemInformation200Response(val *GetMenuItemInformation200Response) *NullableGetMenuItemInformation200Response {
	return &NullableGetMenuItemInformation200Response{value: val, isSet: true}
}

func (v NullableGetMenuItemInformation200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMenuItemInformation200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


