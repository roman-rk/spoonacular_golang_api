/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SearchSiteContent200Response 
type SearchSiteContent200Response struct {
	Articles []SearchSiteContent200ResponseArticlesInner `json:"Articles"`
	GroceryProducts []SearchSiteContent200ResponseGroceryProductsInner `json:"Grocery Products"`
	MenuItems []SearchSiteContent200ResponseGroceryProductsInner `json:"Menu Items"`
	Recipes []SearchSiteContent200ResponseGroceryProductsInner `json:"Recipes"`
}

// NewSearchSiteContent200Response instantiates a new SearchSiteContent200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchSiteContent200Response(articles []SearchSiteContent200ResponseArticlesInner, groceryProducts []SearchSiteContent200ResponseGroceryProductsInner, menuItems []SearchSiteContent200ResponseGroceryProductsInner, recipes []SearchSiteContent200ResponseGroceryProductsInner) *SearchSiteContent200Response {
	this := SearchSiteContent200Response{}
	this.Articles = articles
	this.GroceryProducts = groceryProducts
	this.MenuItems = menuItems
	this.Recipes = recipes
	return &this
}

// NewSearchSiteContent200ResponseWithDefaults instantiates a new SearchSiteContent200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchSiteContent200ResponseWithDefaults() *SearchSiteContent200Response {
	this := SearchSiteContent200Response{}
	return &this
}

// GetArticles returns the Articles field value
func (o *SearchSiteContent200Response) GetArticles() []SearchSiteContent200ResponseArticlesInner {
	if o == nil {
		var ret []SearchSiteContent200ResponseArticlesInner
		return ret
	}

	return o.Articles
}

// GetArticlesOk returns a tuple with the Articles field value
// and a boolean to check if the value has been set.
func (o *SearchSiteContent200Response) GetArticlesOk() ([]SearchSiteContent200ResponseArticlesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Articles, true
}

// SetArticles sets field value
func (o *SearchSiteContent200Response) SetArticles(v []SearchSiteContent200ResponseArticlesInner) {
	o.Articles = v
}

// GetGroceryProducts returns the GroceryProducts field value
func (o *SearchSiteContent200Response) GetGroceryProducts() []SearchSiteContent200ResponseGroceryProductsInner {
	if o == nil {
		var ret []SearchSiteContent200ResponseGroceryProductsInner
		return ret
	}

	return o.GroceryProducts
}

// GetGroceryProductsOk returns a tuple with the GroceryProducts field value
// and a boolean to check if the value has been set.
func (o *SearchSiteContent200Response) GetGroceryProductsOk() ([]SearchSiteContent200ResponseGroceryProductsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroceryProducts, true
}

// SetGroceryProducts sets field value
func (o *SearchSiteContent200Response) SetGroceryProducts(v []SearchSiteContent200ResponseGroceryProductsInner) {
	o.GroceryProducts = v
}

// GetMenuItems returns the MenuItems field value
func (o *SearchSiteContent200Response) GetMenuItems() []SearchSiteContent200ResponseGroceryProductsInner {
	if o == nil {
		var ret []SearchSiteContent200ResponseGroceryProductsInner
		return ret
	}

	return o.MenuItems
}

// GetMenuItemsOk returns a tuple with the MenuItems field value
// and a boolean to check if the value has been set.
func (o *SearchSiteContent200Response) GetMenuItemsOk() ([]SearchSiteContent200ResponseGroceryProductsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.MenuItems, true
}

// SetMenuItems sets field value
func (o *SearchSiteContent200Response) SetMenuItems(v []SearchSiteContent200ResponseGroceryProductsInner) {
	o.MenuItems = v
}

// GetRecipes returns the Recipes field value
func (o *SearchSiteContent200Response) GetRecipes() []SearchSiteContent200ResponseGroceryProductsInner {
	if o == nil {
		var ret []SearchSiteContent200ResponseGroceryProductsInner
		return ret
	}

	return o.Recipes
}

// GetRecipesOk returns a tuple with the Recipes field value
// and a boolean to check if the value has been set.
func (o *SearchSiteContent200Response) GetRecipesOk() ([]SearchSiteContent200ResponseGroceryProductsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recipes, true
}

// SetRecipes sets field value
func (o *SearchSiteContent200Response) SetRecipes(v []SearchSiteContent200ResponseGroceryProductsInner) {
	o.Recipes = v
}

func (o SearchSiteContent200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Articles"] = o.Articles
	}
	if true {
		toSerialize["Grocery Products"] = o.GroceryProducts
	}
	if true {
		toSerialize["Menu Items"] = o.MenuItems
	}
	if true {
		toSerialize["Recipes"] = o.Recipes
	}
	return json.Marshal(toSerialize)
}

type NullableSearchSiteContent200Response struct {
	value *SearchSiteContent200Response
	isSet bool
}

func (v NullableSearchSiteContent200Response) Get() *SearchSiteContent200Response {
	return v.value
}

func (v *NullableSearchSiteContent200Response) Set(val *SearchSiteContent200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchSiteContent200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchSiteContent200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchSiteContent200Response(val *SearchSiteContent200Response) *NullableSearchSiteContent200Response {
	return &NullableSearchSiteContent200Response{value: val, isSet: true}
}

func (v NullableSearchSiteContent200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchSiteContent200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


