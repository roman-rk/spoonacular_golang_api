/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetRecipeInformation200ResponseExtendedIngredientsInner struct for GetRecipeInformation200ResponseExtendedIngredientsInner
type GetRecipeInformation200ResponseExtendedIngredientsInner struct {
	Aisle string `json:"aisle"`
	Amount float32 `json:"amount"`
	Consitency string `json:"consitency"`
	Id int32 `json:"id"`
	Image string `json:"image"`
	Measures *GetRecipeInformation200ResponseExtendedIngredientsInnerMeasures `json:"measures,omitempty"`
	Meta []string `json:"meta,omitempty"`
	Name string `json:"name"`
	Original string `json:"original"`
	OriginalName string `json:"originalName"`
	Unit string `json:"unit"`
}

// NewGetRecipeInformation200ResponseExtendedIngredientsInner instantiates a new GetRecipeInformation200ResponseExtendedIngredientsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRecipeInformation200ResponseExtendedIngredientsInner(aisle string, amount float32, consitency string, id int32, image string, name string, original string, originalName string, unit string) *GetRecipeInformation200ResponseExtendedIngredientsInner {
	this := GetRecipeInformation200ResponseExtendedIngredientsInner{}
	this.Aisle = aisle
	this.Amount = amount
	this.Consitency = consitency
	this.Id = id
	this.Image = image
	this.Name = name
	this.Original = original
	this.OriginalName = originalName
	this.Unit = unit
	return &this
}

// NewGetRecipeInformation200ResponseExtendedIngredientsInnerWithDefaults instantiates a new GetRecipeInformation200ResponseExtendedIngredientsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRecipeInformation200ResponseExtendedIngredientsInnerWithDefaults() *GetRecipeInformation200ResponseExtendedIngredientsInner {
	this := GetRecipeInformation200ResponseExtendedIngredientsInner{}
	return &this
}

// GetAisle returns the Aisle field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetAisle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aisle
}

// GetAisleOk returns a tuple with the Aisle field value
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetAisleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aisle, true
}

// SetAisle sets field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetAisle(v string) {
	o.Aisle = v
}

// GetAmount returns the Amount field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetAmount(v float32) {
	o.Amount = v
}

// GetConsitency returns the Consitency field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetConsitency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Consitency
}

// GetConsitencyOk returns a tuple with the Consitency field value
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetConsitencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Consitency, true
}

// SetConsitency sets field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetConsitency(v string) {
	o.Consitency = v
}

// GetId returns the Id field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetId(v int32) {
	o.Id = v
}

// GetImage returns the Image field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetImage(v string) {
	o.Image = v
}

// GetMeasures returns the Measures field value if set, zero value otherwise.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetMeasures() GetRecipeInformation200ResponseExtendedIngredientsInnerMeasures {
	if o == nil || o.Measures == nil {
		var ret GetRecipeInformation200ResponseExtendedIngredientsInnerMeasures
		return ret
	}
	return *o.Measures
}

// GetMeasuresOk returns a tuple with the Measures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetMeasuresOk() (*GetRecipeInformation200ResponseExtendedIngredientsInnerMeasures, bool) {
	if o == nil || o.Measures == nil {
		return nil, false
	}
	return o.Measures, true
}

// HasMeasures returns a boolean if a field has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) HasMeasures() bool {
	if o != nil && o.Measures != nil {
		return true
	}

	return false
}

// SetMeasures gets a reference to the given GetRecipeInformation200ResponseExtendedIngredientsInnerMeasures and assigns it to the Measures field.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetMeasures(v GetRecipeInformation200ResponseExtendedIngredientsInnerMeasures) {
	o.Measures = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetMeta() []string {
	if o == nil || o.Meta == nil {
		var ret []string
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetMetaOk() ([]string, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given []string and assigns it to the Meta field.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetMeta(v []string) {
	o.Meta = v
}

// GetName returns the Name field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetName(v string) {
	o.Name = v
}

// GetOriginal returns the Original field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetOriginal() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Original
}

// GetOriginalOk returns a tuple with the Original field value
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetOriginalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Original, true
}

// SetOriginal sets field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetOriginal(v string) {
	o.Original = v
}

// GetOriginalName returns the OriginalName field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetOriginalName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalName
}

// GetOriginalNameOk returns a tuple with the OriginalName field value
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetOriginalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalName, true
}

// SetOriginalName sets field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetOriginalName(v string) {
	o.OriginalName = v
}

// GetUnit returns the Unit field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *GetRecipeInformation200ResponseExtendedIngredientsInner) SetUnit(v string) {
	o.Unit = v
}

func (o GetRecipeInformation200ResponseExtendedIngredientsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["aisle"] = o.Aisle
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["consitency"] = o.Consitency
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["image"] = o.Image
	}
	if o.Measures != nil {
		toSerialize["measures"] = o.Measures
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["original"] = o.Original
	}
	if true {
		toSerialize["originalName"] = o.OriginalName
	}
	if true {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableGetRecipeInformation200ResponseExtendedIngredientsInner struct {
	value *GetRecipeInformation200ResponseExtendedIngredientsInner
	isSet bool
}

func (v NullableGetRecipeInformation200ResponseExtendedIngredientsInner) Get() *GetRecipeInformation200ResponseExtendedIngredientsInner {
	return v.value
}

func (v *NullableGetRecipeInformation200ResponseExtendedIngredientsInner) Set(val *GetRecipeInformation200ResponseExtendedIngredientsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRecipeInformation200ResponseExtendedIngredientsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRecipeInformation200ResponseExtendedIngredientsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRecipeInformation200ResponseExtendedIngredientsInner(val *GetRecipeInformation200ResponseExtendedIngredientsInner) *NullableGetRecipeInformation200ResponseExtendedIngredientsInner {
	return &NullableGetRecipeInformation200ResponseExtendedIngredientsInner{value: val, isSet: true}
}

func (v NullableGetRecipeInformation200ResponseExtendedIngredientsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRecipeInformation200ResponseExtendedIngredientsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


