/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetShoppingList200ResponseAislesInnerItemsInner struct for GetShoppingList200ResponseAislesInnerItemsInner
type GetShoppingList200ResponseAislesInnerItemsInner struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	Measures *GetShoppingList200ResponseAislesInnerItemsInnerMeasures `json:"measures,omitempty"`
	PantryItem bool `json:"pantryItem"`
	Aisle string `json:"aisle"`
	Cost float32 `json:"cost"`
	IngredientId int32 `json:"ingredientId"`
}

// NewGetShoppingList200ResponseAislesInnerItemsInner instantiates a new GetShoppingList200ResponseAislesInnerItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetShoppingList200ResponseAislesInnerItemsInner(id int32, name string, pantryItem bool, aisle string, cost float32, ingredientId int32) *GetShoppingList200ResponseAislesInnerItemsInner {
	this := GetShoppingList200ResponseAislesInnerItemsInner{}
	this.Id = id
	this.Name = name
	this.PantryItem = pantryItem
	this.Aisle = aisle
	this.Cost = cost
	this.IngredientId = ingredientId
	return &this
}

// NewGetShoppingList200ResponseAislesInnerItemsInnerWithDefaults instantiates a new GetShoppingList200ResponseAislesInnerItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetShoppingList200ResponseAislesInnerItemsInnerWithDefaults() *GetShoppingList200ResponseAislesInnerItemsInner {
	this := GetShoppingList200ResponseAislesInnerItemsInner{}
	return &this
}

// GetId returns the Id field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) SetName(v string) {
	o.Name = v
}

// GetMeasures returns the Measures field value if set, zero value otherwise.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetMeasures() GetShoppingList200ResponseAislesInnerItemsInnerMeasures {
	if o == nil || o.Measures == nil {
		var ret GetShoppingList200ResponseAislesInnerItemsInnerMeasures
		return ret
	}
	return *o.Measures
}

// GetMeasuresOk returns a tuple with the Measures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetMeasuresOk() (*GetShoppingList200ResponseAislesInnerItemsInnerMeasures, bool) {
	if o == nil || o.Measures == nil {
		return nil, false
	}
	return o.Measures, true
}

// HasMeasures returns a boolean if a field has been set.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) HasMeasures() bool {
	if o != nil && o.Measures != nil {
		return true
	}

	return false
}

// SetMeasures gets a reference to the given GetShoppingList200ResponseAislesInnerItemsInnerMeasures and assigns it to the Measures field.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) SetMeasures(v GetShoppingList200ResponseAislesInnerItemsInnerMeasures) {
	o.Measures = &v
}

// GetPantryItem returns the PantryItem field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetPantryItem() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PantryItem
}

// GetPantryItemOk returns a tuple with the PantryItem field value
// and a boolean to check if the value has been set.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetPantryItemOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PantryItem, true
}

// SetPantryItem sets field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) SetPantryItem(v bool) {
	o.PantryItem = v
}

// GetAisle returns the Aisle field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetAisle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aisle
}

// GetAisleOk returns a tuple with the Aisle field value
// and a boolean to check if the value has been set.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetAisleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aisle, true
}

// SetAisle sets field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) SetAisle(v string) {
	o.Aisle = v
}

// GetCost returns the Cost field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetCost() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Cost
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetCostOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cost, true
}

// SetCost sets field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) SetCost(v float32) {
	o.Cost = v
}

// GetIngredientId returns the IngredientId field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetIngredientId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IngredientId
}

// GetIngredientIdOk returns a tuple with the IngredientId field value
// and a boolean to check if the value has been set.
func (o *GetShoppingList200ResponseAislesInnerItemsInner) GetIngredientIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IngredientId, true
}

// SetIngredientId sets field value
func (o *GetShoppingList200ResponseAislesInnerItemsInner) SetIngredientId(v int32) {
	o.IngredientId = v
}

func (o GetShoppingList200ResponseAislesInnerItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Measures != nil {
		toSerialize["measures"] = o.Measures
	}
	if true {
		toSerialize["pantryItem"] = o.PantryItem
	}
	if true {
		toSerialize["aisle"] = o.Aisle
	}
	if true {
		toSerialize["cost"] = o.Cost
	}
	if true {
		toSerialize["ingredientId"] = o.IngredientId
	}
	return json.Marshal(toSerialize)
}

type NullableGetShoppingList200ResponseAislesInnerItemsInner struct {
	value *GetShoppingList200ResponseAislesInnerItemsInner
	isSet bool
}

func (v NullableGetShoppingList200ResponseAislesInnerItemsInner) Get() *GetShoppingList200ResponseAislesInnerItemsInner {
	return v.value
}

func (v *NullableGetShoppingList200ResponseAislesInnerItemsInner) Set(val *GetShoppingList200ResponseAislesInnerItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetShoppingList200ResponseAislesInnerItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetShoppingList200ResponseAislesInnerItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetShoppingList200ResponseAislesInnerItemsInner(val *GetShoppingList200ResponseAislesInnerItemsInner) *NullableGetShoppingList200ResponseAislesInnerItemsInner {
	return &NullableGetShoppingList200ResponseAislesInnerItemsInner{value: val, isSet: true}
}

func (v NullableGetShoppingList200ResponseAislesInnerItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetShoppingList200ResponseAislesInnerItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


