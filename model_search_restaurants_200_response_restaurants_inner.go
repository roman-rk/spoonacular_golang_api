/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SearchRestaurants200ResponseRestaurantsInner struct for SearchRestaurants200ResponseRestaurantsInner
type SearchRestaurants200ResponseRestaurantsInner struct {
	Id *string `json:"_id,omitempty"`
	Name *string `json:"name,omitempty"`
	PhoneNumber *int32 `json:"phone_number,omitempty"`
	Address *SearchRestaurants200ResponseRestaurantsInnerAddress `json:"address,omitempty"`
	Type *string `json:"type,omitempty"`
	Description *string `json:"description,omitempty"`
	LocalHours *SearchRestaurants200ResponseRestaurantsInnerLocalHours `json:"local_hours,omitempty"`
	Cuisines []string `json:"cuisines,omitempty"`
	FoodPhotos []string `json:"food_photos,omitempty"`
	LogoPhotos []string `json:"logo_photos,omitempty"`
	StorePhotos []map[string]interface{} `json:"store_photos,omitempty"`
	DollarSigns *int32 `json:"dollar_signs,omitempty"`
	PickupEnabled *bool `json:"pickup_enabled,omitempty"`
	DeliveryEnabled *bool `json:"delivery_enabled,omitempty"`
	IsOpen *bool `json:"is_open,omitempty"`
	OffersFirstPartyDelivery *bool `json:"offers_first_party_delivery,omitempty"`
	OffersThirdPartyDelivery *bool `json:"offers_third_party_delivery,omitempty"`
	Miles *float32 `json:"miles,omitempty"`
	WeightedRatingValue *float32 `json:"weighted_rating_value,omitempty"`
	AggregatedRatingCount *int32 `json:"aggregated_rating_count,omitempty"`
}

// NewSearchRestaurants200ResponseRestaurantsInner instantiates a new SearchRestaurants200ResponseRestaurantsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchRestaurants200ResponseRestaurantsInner() *SearchRestaurants200ResponseRestaurantsInner {
	this := SearchRestaurants200ResponseRestaurantsInner{}
	return &this
}

// NewSearchRestaurants200ResponseRestaurantsInnerWithDefaults instantiates a new SearchRestaurants200ResponseRestaurantsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchRestaurants200ResponseRestaurantsInnerWithDefaults() *SearchRestaurants200ResponseRestaurantsInner {
	this := SearchRestaurants200ResponseRestaurantsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetName(v string) {
	o.Name = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetPhoneNumber() int32 {
	if o == nil || o.PhoneNumber == nil {
		var ret int32
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetPhoneNumberOk() (*int32, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given int32 and assigns it to the PhoneNumber field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetPhoneNumber(v int32) {
	o.PhoneNumber = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetAddress() SearchRestaurants200ResponseRestaurantsInnerAddress {
	if o == nil || o.Address == nil {
		var ret SearchRestaurants200ResponseRestaurantsInnerAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetAddressOk() (*SearchRestaurants200ResponseRestaurantsInnerAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given SearchRestaurants200ResponseRestaurantsInnerAddress and assigns it to the Address field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetAddress(v SearchRestaurants200ResponseRestaurantsInnerAddress) {
	o.Address = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetType(v string) {
	o.Type = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetDescription(v string) {
	o.Description = &v
}

// GetLocalHours returns the LocalHours field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetLocalHours() SearchRestaurants200ResponseRestaurantsInnerLocalHours {
	if o == nil || o.LocalHours == nil {
		var ret SearchRestaurants200ResponseRestaurantsInnerLocalHours
		return ret
	}
	return *o.LocalHours
}

// GetLocalHoursOk returns a tuple with the LocalHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetLocalHoursOk() (*SearchRestaurants200ResponseRestaurantsInnerLocalHours, bool) {
	if o == nil || o.LocalHours == nil {
		return nil, false
	}
	return o.LocalHours, true
}

// HasLocalHours returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasLocalHours() bool {
	if o != nil && o.LocalHours != nil {
		return true
	}

	return false
}

// SetLocalHours gets a reference to the given SearchRestaurants200ResponseRestaurantsInnerLocalHours and assigns it to the LocalHours field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetLocalHours(v SearchRestaurants200ResponseRestaurantsInnerLocalHours) {
	o.LocalHours = &v
}

// GetCuisines returns the Cuisines field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetCuisines() []string {
	if o == nil || o.Cuisines == nil {
		var ret []string
		return ret
	}
	return o.Cuisines
}

// GetCuisinesOk returns a tuple with the Cuisines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetCuisinesOk() ([]string, bool) {
	if o == nil || o.Cuisines == nil {
		return nil, false
	}
	return o.Cuisines, true
}

// HasCuisines returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasCuisines() bool {
	if o != nil && o.Cuisines != nil {
		return true
	}

	return false
}

// SetCuisines gets a reference to the given []string and assigns it to the Cuisines field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetCuisines(v []string) {
	o.Cuisines = v
}

// GetFoodPhotos returns the FoodPhotos field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetFoodPhotos() []string {
	if o == nil || o.FoodPhotos == nil {
		var ret []string
		return ret
	}
	return o.FoodPhotos
}

// GetFoodPhotosOk returns a tuple with the FoodPhotos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetFoodPhotosOk() ([]string, bool) {
	if o == nil || o.FoodPhotos == nil {
		return nil, false
	}
	return o.FoodPhotos, true
}

// HasFoodPhotos returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasFoodPhotos() bool {
	if o != nil && o.FoodPhotos != nil {
		return true
	}

	return false
}

// SetFoodPhotos gets a reference to the given []string and assigns it to the FoodPhotos field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetFoodPhotos(v []string) {
	o.FoodPhotos = v
}

// GetLogoPhotos returns the LogoPhotos field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetLogoPhotos() []string {
	if o == nil || o.LogoPhotos == nil {
		var ret []string
		return ret
	}
	return o.LogoPhotos
}

// GetLogoPhotosOk returns a tuple with the LogoPhotos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetLogoPhotosOk() ([]string, bool) {
	if o == nil || o.LogoPhotos == nil {
		return nil, false
	}
	return o.LogoPhotos, true
}

// HasLogoPhotos returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasLogoPhotos() bool {
	if o != nil && o.LogoPhotos != nil {
		return true
	}

	return false
}

// SetLogoPhotos gets a reference to the given []string and assigns it to the LogoPhotos field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetLogoPhotos(v []string) {
	o.LogoPhotos = v
}

// GetStorePhotos returns the StorePhotos field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetStorePhotos() []map[string]interface{} {
	if o == nil || o.StorePhotos == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.StorePhotos
}

// GetStorePhotosOk returns a tuple with the StorePhotos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetStorePhotosOk() ([]map[string]interface{}, bool) {
	if o == nil || o.StorePhotos == nil {
		return nil, false
	}
	return o.StorePhotos, true
}

// HasStorePhotos returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasStorePhotos() bool {
	if o != nil && o.StorePhotos != nil {
		return true
	}

	return false
}

// SetStorePhotos gets a reference to the given []map[string]interface{} and assigns it to the StorePhotos field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetStorePhotos(v []map[string]interface{}) {
	o.StorePhotos = v
}

// GetDollarSigns returns the DollarSigns field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetDollarSigns() int32 {
	if o == nil || o.DollarSigns == nil {
		var ret int32
		return ret
	}
	return *o.DollarSigns
}

// GetDollarSignsOk returns a tuple with the DollarSigns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetDollarSignsOk() (*int32, bool) {
	if o == nil || o.DollarSigns == nil {
		return nil, false
	}
	return o.DollarSigns, true
}

// HasDollarSigns returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasDollarSigns() bool {
	if o != nil && o.DollarSigns != nil {
		return true
	}

	return false
}

// SetDollarSigns gets a reference to the given int32 and assigns it to the DollarSigns field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetDollarSigns(v int32) {
	o.DollarSigns = &v
}

// GetPickupEnabled returns the PickupEnabled field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetPickupEnabled() bool {
	if o == nil || o.PickupEnabled == nil {
		var ret bool
		return ret
	}
	return *o.PickupEnabled
}

// GetPickupEnabledOk returns a tuple with the PickupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetPickupEnabledOk() (*bool, bool) {
	if o == nil || o.PickupEnabled == nil {
		return nil, false
	}
	return o.PickupEnabled, true
}

// HasPickupEnabled returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasPickupEnabled() bool {
	if o != nil && o.PickupEnabled != nil {
		return true
	}

	return false
}

// SetPickupEnabled gets a reference to the given bool and assigns it to the PickupEnabled field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetPickupEnabled(v bool) {
	o.PickupEnabled = &v
}

// GetDeliveryEnabled returns the DeliveryEnabled field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetDeliveryEnabled() bool {
	if o == nil || o.DeliveryEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DeliveryEnabled
}

// GetDeliveryEnabledOk returns a tuple with the DeliveryEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetDeliveryEnabledOk() (*bool, bool) {
	if o == nil || o.DeliveryEnabled == nil {
		return nil, false
	}
	return o.DeliveryEnabled, true
}

// HasDeliveryEnabled returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasDeliveryEnabled() bool {
	if o != nil && o.DeliveryEnabled != nil {
		return true
	}

	return false
}

// SetDeliveryEnabled gets a reference to the given bool and assigns it to the DeliveryEnabled field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetDeliveryEnabled(v bool) {
	o.DeliveryEnabled = &v
}

// GetIsOpen returns the IsOpen field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetIsOpen() bool {
	if o == nil || o.IsOpen == nil {
		var ret bool
		return ret
	}
	return *o.IsOpen
}

// GetIsOpenOk returns a tuple with the IsOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetIsOpenOk() (*bool, bool) {
	if o == nil || o.IsOpen == nil {
		return nil, false
	}
	return o.IsOpen, true
}

// HasIsOpen returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasIsOpen() bool {
	if o != nil && o.IsOpen != nil {
		return true
	}

	return false
}

// SetIsOpen gets a reference to the given bool and assigns it to the IsOpen field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetIsOpen(v bool) {
	o.IsOpen = &v
}

// GetOffersFirstPartyDelivery returns the OffersFirstPartyDelivery field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetOffersFirstPartyDelivery() bool {
	if o == nil || o.OffersFirstPartyDelivery == nil {
		var ret bool
		return ret
	}
	return *o.OffersFirstPartyDelivery
}

// GetOffersFirstPartyDeliveryOk returns a tuple with the OffersFirstPartyDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetOffersFirstPartyDeliveryOk() (*bool, bool) {
	if o == nil || o.OffersFirstPartyDelivery == nil {
		return nil, false
	}
	return o.OffersFirstPartyDelivery, true
}

// HasOffersFirstPartyDelivery returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasOffersFirstPartyDelivery() bool {
	if o != nil && o.OffersFirstPartyDelivery != nil {
		return true
	}

	return false
}

// SetOffersFirstPartyDelivery gets a reference to the given bool and assigns it to the OffersFirstPartyDelivery field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetOffersFirstPartyDelivery(v bool) {
	o.OffersFirstPartyDelivery = &v
}

// GetOffersThirdPartyDelivery returns the OffersThirdPartyDelivery field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetOffersThirdPartyDelivery() bool {
	if o == nil || o.OffersThirdPartyDelivery == nil {
		var ret bool
		return ret
	}
	return *o.OffersThirdPartyDelivery
}

// GetOffersThirdPartyDeliveryOk returns a tuple with the OffersThirdPartyDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetOffersThirdPartyDeliveryOk() (*bool, bool) {
	if o == nil || o.OffersThirdPartyDelivery == nil {
		return nil, false
	}
	return o.OffersThirdPartyDelivery, true
}

// HasOffersThirdPartyDelivery returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasOffersThirdPartyDelivery() bool {
	if o != nil && o.OffersThirdPartyDelivery != nil {
		return true
	}

	return false
}

// SetOffersThirdPartyDelivery gets a reference to the given bool and assigns it to the OffersThirdPartyDelivery field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetOffersThirdPartyDelivery(v bool) {
	o.OffersThirdPartyDelivery = &v
}

// GetMiles returns the Miles field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetMiles() float32 {
	if o == nil || o.Miles == nil {
		var ret float32
		return ret
	}
	return *o.Miles
}

// GetMilesOk returns a tuple with the Miles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetMilesOk() (*float32, bool) {
	if o == nil || o.Miles == nil {
		return nil, false
	}
	return o.Miles, true
}

// HasMiles returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasMiles() bool {
	if o != nil && o.Miles != nil {
		return true
	}

	return false
}

// SetMiles gets a reference to the given float32 and assigns it to the Miles field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetMiles(v float32) {
	o.Miles = &v
}

// GetWeightedRatingValue returns the WeightedRatingValue field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetWeightedRatingValue() float32 {
	if o == nil || o.WeightedRatingValue == nil {
		var ret float32
		return ret
	}
	return *o.WeightedRatingValue
}

// GetWeightedRatingValueOk returns a tuple with the WeightedRatingValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetWeightedRatingValueOk() (*float32, bool) {
	if o == nil || o.WeightedRatingValue == nil {
		return nil, false
	}
	return o.WeightedRatingValue, true
}

// HasWeightedRatingValue returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasWeightedRatingValue() bool {
	if o != nil && o.WeightedRatingValue != nil {
		return true
	}

	return false
}

// SetWeightedRatingValue gets a reference to the given float32 and assigns it to the WeightedRatingValue field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetWeightedRatingValue(v float32) {
	o.WeightedRatingValue = &v
}

// GetAggregatedRatingCount returns the AggregatedRatingCount field value if set, zero value otherwise.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetAggregatedRatingCount() int32 {
	if o == nil || o.AggregatedRatingCount == nil {
		var ret int32
		return ret
	}
	return *o.AggregatedRatingCount
}

// GetAggregatedRatingCountOk returns a tuple with the AggregatedRatingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) GetAggregatedRatingCountOk() (*int32, bool) {
	if o == nil || o.AggregatedRatingCount == nil {
		return nil, false
	}
	return o.AggregatedRatingCount, true
}

// HasAggregatedRatingCount returns a boolean if a field has been set.
func (o *SearchRestaurants200ResponseRestaurantsInner) HasAggregatedRatingCount() bool {
	if o != nil && o.AggregatedRatingCount != nil {
		return true
	}

	return false
}

// SetAggregatedRatingCount gets a reference to the given int32 and assigns it to the AggregatedRatingCount field.
func (o *SearchRestaurants200ResponseRestaurantsInner) SetAggregatedRatingCount(v int32) {
	o.AggregatedRatingCount = &v
}

func (o SearchRestaurants200ResponseRestaurantsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PhoneNumber != nil {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.LocalHours != nil {
		toSerialize["local_hours"] = o.LocalHours
	}
	if o.Cuisines != nil {
		toSerialize["cuisines"] = o.Cuisines
	}
	if o.FoodPhotos != nil {
		toSerialize["food_photos"] = o.FoodPhotos
	}
	if o.LogoPhotos != nil {
		toSerialize["logo_photos"] = o.LogoPhotos
	}
	if o.StorePhotos != nil {
		toSerialize["store_photos"] = o.StorePhotos
	}
	if o.DollarSigns != nil {
		toSerialize["dollar_signs"] = o.DollarSigns
	}
	if o.PickupEnabled != nil {
		toSerialize["pickup_enabled"] = o.PickupEnabled
	}
	if o.DeliveryEnabled != nil {
		toSerialize["delivery_enabled"] = o.DeliveryEnabled
	}
	if o.IsOpen != nil {
		toSerialize["is_open"] = o.IsOpen
	}
	if o.OffersFirstPartyDelivery != nil {
		toSerialize["offers_first_party_delivery"] = o.OffersFirstPartyDelivery
	}
	if o.OffersThirdPartyDelivery != nil {
		toSerialize["offers_third_party_delivery"] = o.OffersThirdPartyDelivery
	}
	if o.Miles != nil {
		toSerialize["miles"] = o.Miles
	}
	if o.WeightedRatingValue != nil {
		toSerialize["weighted_rating_value"] = o.WeightedRatingValue
	}
	if o.AggregatedRatingCount != nil {
		toSerialize["aggregated_rating_count"] = o.AggregatedRatingCount
	}
	return json.Marshal(toSerialize)
}

type NullableSearchRestaurants200ResponseRestaurantsInner struct {
	value *SearchRestaurants200ResponseRestaurantsInner
	isSet bool
}

func (v NullableSearchRestaurants200ResponseRestaurantsInner) Get() *SearchRestaurants200ResponseRestaurantsInner {
	return v.value
}

func (v *NullableSearchRestaurants200ResponseRestaurantsInner) Set(val *SearchRestaurants200ResponseRestaurantsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchRestaurants200ResponseRestaurantsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchRestaurants200ResponseRestaurantsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchRestaurants200ResponseRestaurantsInner(val *SearchRestaurants200ResponseRestaurantsInner) *NullableSearchRestaurants200ResponseRestaurantsInner {
	return &NullableSearchRestaurants200ResponseRestaurantsInner{value: val, isSet: true}
}

func (v NullableSearchRestaurants200ResponseRestaurantsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchRestaurants200ResponseRestaurantsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


