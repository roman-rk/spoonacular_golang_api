/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetMealPlanTemplate200Response 
type GetMealPlanTemplate200Response struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	Days []GetMealPlanTemplate200ResponseDaysInner `json:"days"`
}

// NewGetMealPlanTemplate200Response instantiates a new GetMealPlanTemplate200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMealPlanTemplate200Response(id int32, name string, days []GetMealPlanTemplate200ResponseDaysInner) *GetMealPlanTemplate200Response {
	this := GetMealPlanTemplate200Response{}
	this.Id = id
	this.Name = name
	this.Days = days
	return &this
}

// NewGetMealPlanTemplate200ResponseWithDefaults instantiates a new GetMealPlanTemplate200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMealPlanTemplate200ResponseWithDefaults() *GetMealPlanTemplate200Response {
	this := GetMealPlanTemplate200Response{}
	return &this
}

// GetId returns the Id field value
func (o *GetMealPlanTemplate200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetMealPlanTemplate200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetMealPlanTemplate200Response) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GetMealPlanTemplate200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetMealPlanTemplate200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetMealPlanTemplate200Response) SetName(v string) {
	o.Name = v
}

// GetDays returns the Days field value
func (o *GetMealPlanTemplate200Response) GetDays() []GetMealPlanTemplate200ResponseDaysInner {
	if o == nil {
		var ret []GetMealPlanTemplate200ResponseDaysInner
		return ret
	}

	return o.Days
}

// GetDaysOk returns a tuple with the Days field value
// and a boolean to check if the value has been set.
func (o *GetMealPlanTemplate200Response) GetDaysOk() ([]GetMealPlanTemplate200ResponseDaysInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Days, true
}

// SetDays sets field value
func (o *GetMealPlanTemplate200Response) SetDays(v []GetMealPlanTemplate200ResponseDaysInner) {
	o.Days = v
}

func (o GetMealPlanTemplate200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["days"] = o.Days
	}
	return json.Marshal(toSerialize)
}

type NullableGetMealPlanTemplate200Response struct {
	value *GetMealPlanTemplate200Response
	isSet bool
}

func (v NullableGetMealPlanTemplate200Response) Get() *GetMealPlanTemplate200Response {
	return v.value
}

func (v *NullableGetMealPlanTemplate200Response) Set(val *GetMealPlanTemplate200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMealPlanTemplate200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMealPlanTemplate200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMealPlanTemplate200Response(val *GetMealPlanTemplate200Response) *NullableGetMealPlanTemplate200Response {
	return &NullableGetMealPlanTemplate200Response{value: val, isSet: true}
}

func (v NullableGetMealPlanTemplate200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMealPlanTemplate200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


