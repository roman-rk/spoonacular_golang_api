/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount struct for GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount
type GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount struct {
	Metric GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric `json:"metric"`
	Us GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric `json:"us"`
}

// NewGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount instantiates a new GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount(metric GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric, us GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric) *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount {
	this := GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount{}
	this.Metric = metric
	this.Us = us
	return &this
}

// NewGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountWithDefaults instantiates a new GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountWithDefaults() *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount {
	this := GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount{}
	return &this
}

// GetMetric returns the Metric field value
func (o *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) GetMetric() GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric {
	if o == nil {
		var ret GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) GetMetricOk() (*GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) SetMetric(v GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric) {
	o.Metric = v
}

// GetUs returns the Us field value
func (o *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) GetUs() GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric {
	if o == nil {
		var ret GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric
		return ret
	}

	return o.Us
}

// GetUsOk returns a tuple with the Us field value
// and a boolean to check if the value has been set.
func (o *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) GetUsOk() (*GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Us, true
}

// SetUs sets field value
func (o *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) SetUs(v GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmountMetric) {
	o.Us = v
}

func (o GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["metric"] = o.Metric
	}
	if true {
		toSerialize["us"] = o.Us
	}
	return json.Marshal(toSerialize)
}

type NullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount struct {
	value *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount
	isSet bool
}

func (v NullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) Get() *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount {
	return v.value
}

func (v *NullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) Set(val *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount(val *GetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) *NullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount {
	return &NullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount{value: val, isSet: true}
}

func (v NullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRecipePriceBreakdownByID200ResponseIngredientsInnerAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


