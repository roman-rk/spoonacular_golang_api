/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SearchAllFood200ResponseSearchResultsInnerResultsInner struct for SearchAllFood200ResponseSearchResultsInnerResultsInner
type SearchAllFood200ResponseSearchResultsInnerResultsInner struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Image NullableString `json:"image"`
	Link NullableString `json:"link"`
	Type string `json:"type"`
	Relevance float32 `json:"relevance"`
	Content NullableString `json:"content"`
}

// NewSearchAllFood200ResponseSearchResultsInnerResultsInner instantiates a new SearchAllFood200ResponseSearchResultsInnerResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchAllFood200ResponseSearchResultsInnerResultsInner(id string, name string, image NullableString, link NullableString, type_ string, relevance float32, content NullableString) *SearchAllFood200ResponseSearchResultsInnerResultsInner {
	this := SearchAllFood200ResponseSearchResultsInnerResultsInner{}
	this.Id = id
	this.Name = name
	this.Image = image
	this.Link = link
	this.Type = type_
	this.Relevance = relevance
	this.Content = content
	return &this
}

// NewSearchAllFood200ResponseSearchResultsInnerResultsInnerWithDefaults instantiates a new SearchAllFood200ResponseSearchResultsInnerResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchAllFood200ResponseSearchResultsInnerResultsInnerWithDefaults() *SearchAllFood200ResponseSearchResultsInnerResultsInner {
	this := SearchAllFood200ResponseSearchResultsInnerResultsInner{}
	return &this
}

// GetId returns the Id field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) SetName(v string) {
	o.Name = v
}

// GetImage returns the Image field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetImage() string {
	if o == nil || o.Image.Get() == nil {
		var ret string
		return ret
	}

	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// SetImage sets field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) SetImage(v string) {
	o.Image.Set(&v)
}

// GetLink returns the Link field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetLink() string {
	if o == nil || o.Link.Get() == nil {
		var ret string
		return ret
	}

	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// SetLink sets field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) SetLink(v string) {
	o.Link.Set(&v)
}

// GetType returns the Type field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) SetType(v string) {
	o.Type = v
}

// GetRelevance returns the Relevance field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetRelevance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Relevance
}

// GetRelevanceOk returns a tuple with the Relevance field value
// and a boolean to check if the value has been set.
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetRelevanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relevance, true
}

// SetRelevance sets field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) SetRelevance(v float32) {
	o.Relevance = v
}

// GetContent returns the Content field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetContent() string {
	if o == nil || o.Content.Get() == nil {
		var ret string
		return ret
	}

	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// SetContent sets field value
func (o *SearchAllFood200ResponseSearchResultsInnerResultsInner) SetContent(v string) {
	o.Content.Set(&v)
}

func (o SearchAllFood200ResponseSearchResultsInnerResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["image"] = o.Image.Get()
	}
	if true {
		toSerialize["link"] = o.Link.Get()
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["relevance"] = o.Relevance
	}
	if true {
		toSerialize["content"] = o.Content.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSearchAllFood200ResponseSearchResultsInnerResultsInner struct {
	value *SearchAllFood200ResponseSearchResultsInnerResultsInner
	isSet bool
}

func (v NullableSearchAllFood200ResponseSearchResultsInnerResultsInner) Get() *SearchAllFood200ResponseSearchResultsInnerResultsInner {
	return v.value
}

func (v *NullableSearchAllFood200ResponseSearchResultsInnerResultsInner) Set(val *SearchAllFood200ResponseSearchResultsInnerResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchAllFood200ResponseSearchResultsInnerResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchAllFood200ResponseSearchResultsInnerResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchAllFood200ResponseSearchResultsInnerResultsInner(val *SearchAllFood200ResponseSearchResultsInnerResultsInner) *NullableSearchAllFood200ResponseSearchResultsInnerResultsInner {
	return &NullableSearchAllFood200ResponseSearchResultsInnerResultsInner{value: val, isSet: true}
}

func (v NullableSearchAllFood200ResponseSearchResultsInnerResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchAllFood200ResponseSearchResultsInnerResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


