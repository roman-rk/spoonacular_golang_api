/*
spoonacular API

The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.

API version: 1.1
Contact: mail@spoonacular.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddMealPlanTemplate200ResponseItemsInner struct for AddMealPlanTemplate200ResponseItemsInner
type AddMealPlanTemplate200ResponseItemsInner struct {
	Day int32 `json:"day"`
	Slot int32 `json:"slot"`
	Position int32 `json:"position"`
	Type string `json:"type"`
	Value *AddMealPlanTemplate200ResponseItemsInnerValue `json:"value,omitempty"`
}

// NewAddMealPlanTemplate200ResponseItemsInner instantiates a new AddMealPlanTemplate200ResponseItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddMealPlanTemplate200ResponseItemsInner(day int32, slot int32, position int32, type_ string) *AddMealPlanTemplate200ResponseItemsInner {
	this := AddMealPlanTemplate200ResponseItemsInner{}
	this.Day = day
	this.Slot = slot
	this.Position = position
	this.Type = type_
	return &this
}

// NewAddMealPlanTemplate200ResponseItemsInnerWithDefaults instantiates a new AddMealPlanTemplate200ResponseItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddMealPlanTemplate200ResponseItemsInnerWithDefaults() *AddMealPlanTemplate200ResponseItemsInner {
	this := AddMealPlanTemplate200ResponseItemsInner{}
	return &this
}

// GetDay returns the Day field value
func (o *AddMealPlanTemplate200ResponseItemsInner) GetDay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Day
}

// GetDayOk returns a tuple with the Day field value
// and a boolean to check if the value has been set.
func (o *AddMealPlanTemplate200ResponseItemsInner) GetDayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Day, true
}

// SetDay sets field value
func (o *AddMealPlanTemplate200ResponseItemsInner) SetDay(v int32) {
	o.Day = v
}

// GetSlot returns the Slot field value
func (o *AddMealPlanTemplate200ResponseItemsInner) GetSlot() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Slot
}

// GetSlotOk returns a tuple with the Slot field value
// and a boolean to check if the value has been set.
func (o *AddMealPlanTemplate200ResponseItemsInner) GetSlotOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slot, true
}

// SetSlot sets field value
func (o *AddMealPlanTemplate200ResponseItemsInner) SetSlot(v int32) {
	o.Slot = v
}

// GetPosition returns the Position field value
func (o *AddMealPlanTemplate200ResponseItemsInner) GetPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *AddMealPlanTemplate200ResponseItemsInner) GetPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *AddMealPlanTemplate200ResponseItemsInner) SetPosition(v int32) {
	o.Position = v
}

// GetType returns the Type field value
func (o *AddMealPlanTemplate200ResponseItemsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddMealPlanTemplate200ResponseItemsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddMealPlanTemplate200ResponseItemsInner) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AddMealPlanTemplate200ResponseItemsInner) GetValue() AddMealPlanTemplate200ResponseItemsInnerValue {
	if o == nil || o.Value == nil {
		var ret AddMealPlanTemplate200ResponseItemsInnerValue
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMealPlanTemplate200ResponseItemsInner) GetValueOk() (*AddMealPlanTemplate200ResponseItemsInnerValue, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AddMealPlanTemplate200ResponseItemsInner) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given AddMealPlanTemplate200ResponseItemsInnerValue and assigns it to the Value field.
func (o *AddMealPlanTemplate200ResponseItemsInner) SetValue(v AddMealPlanTemplate200ResponseItemsInnerValue) {
	o.Value = &v
}

func (o AddMealPlanTemplate200ResponseItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["day"] = o.Day
	}
	if true {
		toSerialize["slot"] = o.Slot
	}
	if true {
		toSerialize["position"] = o.Position
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAddMealPlanTemplate200ResponseItemsInner struct {
	value *AddMealPlanTemplate200ResponseItemsInner
	isSet bool
}

func (v NullableAddMealPlanTemplate200ResponseItemsInner) Get() *AddMealPlanTemplate200ResponseItemsInner {
	return v.value
}

func (v *NullableAddMealPlanTemplate200ResponseItemsInner) Set(val *AddMealPlanTemplate200ResponseItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAddMealPlanTemplate200ResponseItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAddMealPlanTemplate200ResponseItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddMealPlanTemplate200ResponseItemsInner(val *AddMealPlanTemplate200ResponseItemsInner) *NullableAddMealPlanTemplate200ResponseItemsInner {
	return &NullableAddMealPlanTemplate200ResponseItemsInner{value: val, isSet: true}
}

func (v NullableAddMealPlanTemplate200ResponseItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddMealPlanTemplate200ResponseItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


